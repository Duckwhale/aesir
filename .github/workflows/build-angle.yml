name: Build angle

on:
  push:
    paths:
      - .github/workflows/build-angle.yml
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-20.04
            ext: so
          - os: windows-latest
            ext: dll

    runs-on: ${{ matrix.os }}

    steps:
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - run: |
          git clone --depth=1 https://chromium.googlesource.com/angle/angle.git
          git clone --depth=1 https://chromium.googlesource.com/chromium/tools/depot_tools.git

      - if: ${{ matrix.os == 'ubuntu-20.04' }}
        run: |
          export DEPOT_TOOLS_WIN_TOOLCHAIN=0
          export PATH="$PATH:$PWD/depot_tools"

      - if: ${{ matrix.os == 'windows-latest' }}
        run: |
          $env:DEPOT_TOOLS_WIN_TOOLCHAIN=0
          $env:PATH += ";$pwd\depot_tools"

      - working-directory: angle
        run: |
          python scripts/bootstrap.py
          gclient sync
          git checkout master
          #git apply -p1 ../angle_fixes.patch

      - if: ${{ matrix.os == 'ubuntu-20.04' }}
        run:
          ./angle/build/install-build-deps.sh

      - working-directory: angle
        run: |
          gn gen out/Release --args="is_clang=true is_component_build=false angle_enable_null=false is_debug=false is_official_build=true chrome_pgo_phase=0 use_thin_lto=true init_stack_vars=false"
          cd out/Release
          ninja libEGL

          cd ../..
          gn gen out/Debug --args="is_clang=true is_component_build=false angle_enable_null=false"
          cd out/Debug
          ninja libEGL

      - uses: actions/upload-artifact@v2
        with:
          path: |
            angle/out/Debug/libEGL.${{ matrix.ext }}
            angle/out/Debug/libGLESv2.${{ matrix.ext }}
            angle/out/Release/libEGL.${{ matrix.ext }}
            angle/out/Release/libGLESv2.${{ matrix.ext }}
